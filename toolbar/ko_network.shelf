<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="ko_network" label="KoNetwork">
    <memberTool name="first_operator"/>
    <memberTool name="last_operator"/>
    <memberTool name="prev_operator"/>
    <memberTool name="next_operator"/>
    <memberTool name="toggle_template"/>
  </toolshelf>

  <tool name="first_operator" label="FirstOperator" icon="H:/Painting/Assets_2D/Houdini-Icons/KO/firstoperator.svg">
    <toolMenuContext name="viewer">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="cop_viewer">
      <contextNetType>COP2</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>CHOP</contextNetType>
      <contextNetType>ROP</contextNetType>
      <contextNetType>SHOP</contextNetType>
      <contextNetType>COP2</contextNetType>
      <contextNetType>VOP</contextNetType>
      <contextNetType>VOPNET</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>TOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[pane = kwargs['pane']

if(pane.type() != hou.paneTabType.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)

node = pane.currentNode()

while(node.inputs()):
    next_node = next((item for item in node.inputs() if item), None)
    if next_node.parent() == node.parent():
        node = next_node
    else:
        break
        
pane.setCurrentNode(node)
pane.frameSelection()]]></script>
  </tool>

  <tool name="last_operator" label="LastOperator" icon="H:/Painting/Assets_2D/Houdini-Icons/KO/lastoperator.svg">
    <toolMenuContext name="viewer">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="cop_viewer">
      <contextNetType>COP2</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>CHOP</contextNetType>
      <contextNetType>ROP</contextNetType>
      <contextNetType>SHOP</contextNetType>
      <contextNetType>COP2</contextNetType>
      <contextNetType>VOP</contextNetType>
      <contextNetType>VOPNET</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>TOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[pane = kwargs['pane']

if(pane.type() != hou.paneTabType.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    
node = pane.currentNode()

while(node.outputs()):
    next_node = next((item for item in node.outputs() if item), None)
    if next_node.parent() == node.parent():
        node = next_node
    else:
        break
        
pane.setCurrentNode(node)
pane.frameSelection()]]></script>
  </tool>

  <tool name="prev_operator" label="Prevperator" icon="H:/Painting/Assets_2D/Houdini-Icons/KO/prevoperator.svg">
    <toolMenuContext name="viewer">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="cop_viewer">
      <contextNetType>COP2</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>CHOP</contextNetType>
      <contextNetType>ROP</contextNetType>
      <contextNetType>SHOP</contextNetType>
      <contextNetType>COP2</contextNetType>
      <contextNetType>VOP</contextNetType>
      <contextNetType>VOPNET</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>TOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[pane = kwargs['pane']

if(pane.type() != hou.paneTabType.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)

node = pane.currentNode()

next_node = next((item for item in node.inputs() if item), None)
if next_node and next_node.parent() == node.parent():
    node = next_node
        
    pane.setCurrentNode(node)
    pane.frameSelection()]]></script>
  </tool>

  <tool name="next_operator" label="NextOperator" icon="H:/Painting/Assets_2D/Houdini-Icons/KO/nextoperator.svg">
    <toolMenuContext name="viewer">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="cop_viewer">
      <contextNetType>COP2</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
      <contextNetType>SOP</contextNetType>
      <contextNetType>CHOP</contextNetType>
      <contextNetType>ROP</contextNetType>
      <contextNetType>SHOP</contextNetType>
      <contextNetType>COP2</contextNetType>
      <contextNetType>VOP</contextNetType>
      <contextNetType>VOPNET</contextNetType>
      <contextNetType>DOP</contextNetType>
      <contextNetType>TOP</contextNetType>
      <contextNetType>LOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[pane = kwargs['pane']

if(pane.type() != hou.paneTabType.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)

node = pane.currentNode()

next_node = next((item for item in node.outputs() if item), None)
if next_node and next_node.parent() == node.parent():
    node = next_node
        
    pane.setCurrentNode(node)
    pane.frameSelection()]]></script>
  </tool>

  <tool name="toggle_template" label="Toggle Template" icon="hicon:/SVGIcons.index?NODEFLAGS_template.svg">
    <script scriptType="python"><![CDATA[import nodesearch

pane = kwargs['pane']

if(pane.type() != hou.paneTabType.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    
parent = pane.pwd()

key = 'ko_saved_template_flags'
flags = getattr(hou.session, key, [])
matcher = nodesearch.State("template", True)
nodes = matcher.nodes(parent)

if nodes:
    flags = []
    for n in nodes:
        selectable = n.isSelectableTemplateFlagSet()
        datum = { 'path': n.path(), 'selectable': selectable }
        flags.append(datum)
        if selectable:
            n.setSelectableTemplateFlag(False)
            n.setTemplateFlag(False)
        else:
            n.setTemplateFlag(False)
            
    setattr(hou.session, key, flags)
    
else:
    flags = getattr(hou.session, key, [])
    for f in flags:
        n = hou.node(f['path'])
        if n:
            if f['selectable']:
                n.setTemplateFlag(True)
                n.setSelectableTemplateFlag(True)
            else:
                n.setTemplateFlag(True)
    
]]></script>
  </tool>
</shelfDocument>
